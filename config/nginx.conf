server {
    set $user vagrant;
    listen 80;
    server_name umbrepl.local;

    set $current_host $host;
    if ( $host ~ ^(www\.)?(.+)$ ) {
        set $current_host $2;
    }

    set $chk_host $current_host::$user.;
    if ( $chk_host ~ (.+)?(\w+\.)?(.+)::\2$ ){
        set $current_host $1$3;
    }

    set $docroot /vagrant/web;

    access_log /vagrant/access.log main;
    error_log /vagrant/error.log;

    charset utf8;

    # PHP FCGI CONFING
    include /etc/nginx/fpm.conf;

    location /markup {
           try_files $uri $uri/index.html $uri$is_args$args =404;
       }

    location / {
        # try to serve file directly, fallback to app.php
        try_files $uri /app_dev.php$is_args$args;
    }
    # DEV
    # This rule should only be placed on your development environment
    # In production, don't include this and don't deploy app_dev.php or config.php
    location ~ ^/(app_dev|config)\.php(/|$) {
        fastcgi_pass unix:/var/run/php5-fpm.sock;
        fastcgi_split_path_info ^(.+\.php)(/.*)$;
        include fastcgi_params;
        fastcgi_param SCRIPT_FILENAME $document_root$fastcgi_script_name;
        fastcgi_param HTTPS off;
    }

    # PROD
    location ~ ^/app\.php(/|$) {
        fastcgi_pass unix:/var/run/php5-fpm.sock;
        fastcgi_split_path_info ^(.+\.php)(/.*)$;
        include fastcgi_params;
        fastcgi_param SCRIPT_FILENAME $document_root$fastcgi_script_name;
        fastcgi_param HTTPS off;
        # Prevents URIs that include the front controller. This will 404:
        # http://domain.tld/app.php/some-path
        # Remove the internal directive to allow URIs like this
        internal;
    }

    # CACHE CONTROL FOR STATIC FILES
   # location ~* \.(css|js|jpg|jpeg|png|gif|swf|svg|tiff|pdf)$ {
    #    expires 30d;
   # }
}
